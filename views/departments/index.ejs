<style>
  #msg {
    opacity: 0;
    transition: opacity 0.5s ease; /* mượt trong 0.5s */
  }

  #msg.show {
    opacity: 1;
  }
</style>
<div class="container-fluid">
  <!-- Hiển thị Breadcrumb -->
  <div class="row mt-2 ms-1 me-1">
    <ul class="breadcrumb rounded">
      <li><a href="#">Home</a></li>
      <li><a href="#">Departments</a></li>
    </ul>
  </div>
  <!-- Nội dung chính -->
  <div class="row mt-2 mb-2 d-flex justify-content-between">
    <!-- Danh sách departments -->
    <div class="col-md-9">
      <div class="card">
        <div class="card-header bg-info">Department index</div>
        <div class="card-body">
          <table id="departmentListTable" class="table table-striped">
            <thead>
              <tr>
                <th>#</th>
                <th>Name</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody id="departmentListTableBody"></tbody>
            <tfoot>
              <tr>
                <th>#</th>
                <th>Name</th>
                <th>Action</th>
              </tr>
            </tfoot>
          </table>
        </div>
      </div>
    </div>
    <!-- Form thêm mới/chỉnh sửa -->
    <div class="col-md-3">
      <!-- Msg hiển thị chung -->
      <div id="msg"></div>

      <!-- Form Add -->
      <div class="card" id="addDept">
        <div class="card-header bg-info">Add new Department</div>
        <div class="card-body">
          <form id="addDeptForm">
            <div class="form-group mb-3">
              <label for="name">Name</label>
              <input type="text" class="form-control" name="name" id="name" />
            </div>
            <div class="d-flex justify-content-end">
              <button type="submit" class="btn btn-outline-primary" id="btnAdd">
                Xác nhận
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Form Edit -->
      <div class="card shadow d-none" id="editDept">
        <div class="card-header bg-warning">Edit Department</div>
        <div class="card-body">
          <form id="editDeptForm" data-id="">
            <div class="form-group mb-3">
              <label for="nameEdit">Name</label>
              <input
                type="text"
                class="form-control"
                name="nameEdit"
                id="nameEdit"
              />
            </div>
            <div class="d-flex justify-content-between">
              <button
                type="button"
                class="btn btn-outline-secondary"
                onclick="cancelEdit()"
                id="btnReturn"
              >
                Hủy
              </button>
              <button
                type="submit"
                class="btn btn-outline-warning"
                id="btnUpdate"
              >
                Cập nhật
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Modal info -->
<div
  class="modal fade"
  id="infoModal"
  tabindex="-1"
  aria-labelledby="infoModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="infoModalLabel">
          Thông tin Department
        </h1>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">...</div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Close
        </button>
      </div>
    </div>
  </div>
</div>

<!-- JS DataTable -->
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<script src="https://cdn.datatables.net/2.3.3/js/dataTables.js"></script>
<script src="https://cdn.datatables.net/2.3.3/js/dataTables.bootstrap5.js"></script>

<script>
  // Hiển thị message chung
  function showMessage(type, text) {
    const msgDiv = document.getElementById("msg");

    // gán nội dung
    msgDiv.innerHTML = `<div class="alert alert-${type}">${text}</div>`;

    // hiện ra với hiệu ứng fade-in
    msgDiv.classList.add("show");

    // sau 3s thì fade-out
    setTimeout(() => {
      msgDiv.classList.remove("show");

      // đợi hết transition rồi mới xóa nội dung
      setTimeout(() => {
        msgDiv.innerHTML = "";
      }, 500); // khớp với transition 0.5s
    }, 3000);
  }

  // Load danh sách departments
  async function loadDepartmentList() {
    try {
      const res = await fetch("/departments/fetchDeptData");
      const data = await res.json();
      if (data.success) {
        // Nếu DataTable đã tồn tại -> hủy trước khi render lại
        if ($.fn.DataTable.isDataTable("#departmentListTable")) {
          $("#departmentListTable").DataTable().destroy();
        }

        const tbody = document.getElementById("departmentListTableBody");
        tbody.innerHTML = "";
        data.data.forEach((dept, index) => {
          const row = `
          <tr>
            <td>${index + 1}</td>
            <td>${dept.name}</td>
            <td>
              <button type="button" class="btn btn-info" onclick="showDeptInfo(${
                dept.id
              })">
                <i class="bi bi-eye"></i>
              </button>
              <a href="#" class="btn btn-warning" onclick="switchToEdit(${
                dept.id
              })">
                <i class="bi bi-pencil-square"></i>
              </a>
              <a class="btn btn-danger" href="#" onclick="deleteDept(${
                dept.id
              })">
                <i class="bi bi-trash"></i>
              </a>
            </td>
          </tr>`;
          tbody.innerHTML += row;
        });

        // Khởi tạo lại DataTable
        new DataTable("#departmentListTable");
      } else {
        showMessage("danger", data.message || "Không thể tải danh sách");
      }
    } catch (err) {
      console.error("Lỗi fetch:", err);
      showMessage("danger", "Lỗi server khi tải danh sách");
    }
  }

  // Thêm Department
  document
    .getElementById("addDeptForm")
    .addEventListener("submit", async (e) => {
      e.preventDefault();
      const name = document.getElementById("name").value.trim();

      if (!name) {
        return showMessage("danger", "Tên không được để trống");
      }

      try {
        const res = await fetch("/departments/addDept", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ name }),
        });
        const data = await res.json();

        if (data.success) {
          showMessage("success", data.message);
          document.getElementById("addDeptForm").reset();
          loadDepartmentList();
        } else {
          showMessage("danger", data.message);
        }
      } catch (err) {
        console.error("Lỗi add:", err);
        showMessage("danger", "Lỗi server khi thêm phòng ban");
      }
    });

  // Chuyển sang form Edit
  async function switchToEdit(deptId) {
    // Hide addForm
    document.getElementById("addDept").classList.add("d-none");
    // Show editForm
    document.getElementById("editDept").classList.remove("d-none");

    document.getElementById("editDeptForm").setAttribute("data-id", deptId);

    try {
      const res = await fetch(`/departments/getDept/${deptId}`);
      const data = await res.json();
      if (data.success) {
        document.getElementById("nameEdit").value = data.data.name;
      } else {
        showMessage("danger", data.message || "Không tìm thấy phòng ban");
      }
    } catch (err) {
      console.error("Lỗi fetch dept:", err);
      showMessage("danger", "Lỗi server khi lấy thông tin phòng ban");
    }
  }

  // Update Department
  document
    .getElementById("editDeptForm")
    .addEventListener("submit", async (e) => {
      e.preventDefault();
      const id = e.target.getAttribute("data-id");
      const name = document.getElementById("nameEdit").value.trim();

      if (!name) {
        return showMessage("danger", "Tên không được để trống");
      }

      try {
        const res = await fetch(`/departments/update/${id}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ name }),
        });
        const data = await res.json();

        if (data.success) {
          showMessage("success", data.message);
          cancelEdit();
          loadDepartmentList();
        } else {
          showMessage("danger", data.message);
        }
      } catch (err) {
        console.error("Lỗi update:", err);
        showMessage("danger", "Lỗi server khi cập nhật phòng ban");
      }
    });

  // Cancel Edit
  function cancelEdit() {
    document.getElementById("editDept").classList.add("d-none");
    document.getElementById("addDept").classList.remove("d-none");
    document.getElementById("editDeptForm").reset();
  }

  // Xóa Department
  async function deleteDept(id) {
    if (!confirm("Bạn có chắc chắn muốn xóa phòng ban này?")) return;
    try {
      const res = await fetch(`/departments/delete/${id}`, {
        method: "DELETE",
      });
      const data = await res.json();
      if (data.success) {
        showMessage("success", data.message);
        loadDepartmentList();
      } else {
        showMessage("danger", data.message);
      }
    } catch (err) {
      console.error("Lỗi delete:", err);
      showMessage("danger", "Lỗi server khi xóa phòng ban");
    }
  }
  // Modal hiển thị thông tin department
  async function showDeptInfo(id) {
    try {
      const res = await fetch(`/departments/getDept/${id}`);
      const data = await res.json();

      if (data.success) {
        // Lấy phần tử modal
        const modalLabel = document.getElementById("infoModalLabel");
        const modalBody = document.querySelector("#infoModal .modal-body");

        // Cập nhật nội dung
        modalLabel.textContent = "Thông tin phòng ban";
        modalBody.innerHTML = `
          <p><strong>ID:</strong> ${data.data.id}</p>
          <p><strong>Name:</strong> ${data.data.name}</p>
        `;

        // Hiển thị modal
        const modal = new bootstrap.Modal(document.getElementById("infoModal"));
        modal.show();
      } else {
        alert(data.message || "Không thể lấy thông tin phòng ban");
      }
    } catch (err) {
      console.error("Lỗi fetch:", err);
      alert("Lỗi server");
    }
  }
  // Gọi lần đầu
  window.onload = loadDepartmentList;
</script>
